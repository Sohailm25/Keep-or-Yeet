# -*- coding: utf-8 -*-
"""Importing a Model and Predicting (TensorFlow Model).ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1I_lGM_Im4iEkyVYl-J9t9dycY57JeIF3

This imports a Tensorflow Model (Not converted to TFLite)

## LOAD MODEL
"""

# load and evaluate a saved model
from keras.models import load_model
import numpy as np
import tensorflow as tf

# load model (Insert respective filepath to the saved model+weights)
new_model = load_model('/content/Downloaded Garbage Classification 6 CLASSES)(InceptionV3).h5') #replace with SavedModel file if that's used instead     
# summarize model.
new_model.summary()

"""## PREDICT WITH MODEL"""

from keras.preprocessing import image

pred_test_dir = '/content/Plastic Bottle Predict.jpg' # Insert path to image you want to predict on

test_image = image.load_img(pred_test_dir, target_size=(224,224)) #Adjust to 128x128 depending on what is used in training
test_image = image.img_to_array(test_image)
test_image = np.expand_dims(test_image, axis=0)

test_image = test_image.reshape(1,224,224,3)

"""HOW THE PROBABILITY DISTRIBUTION ARRAY IS SETUP
>[ORGANIC, RECYCLE, NONRECYCLABLE]
"""

predictions = tf.nn.softmax(new_model.predict(test_image, batch_size=1))
print(predictions)
result = tf.round(predictions) # rounds the predictions for each respective type
print(result)

print(CLASS_NAMES[np.argmax(result[0])])